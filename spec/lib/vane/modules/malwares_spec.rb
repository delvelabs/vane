# encoding: UTF-8
#--
# WPScan - WordPress Security Scanner
# Copyright (C) 2012-2013
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#++

shared_examples_for 'Malwares' do

  before :each do
    @module = VaneModuleSpec.new('http://example.localhost')
    @target_url = @module.uri.to_s
    @fixtures_dir = SPEC_FIXTURES_VANE_MODULES_DIR + '/malwares'
    @malwares_file_path = @fixtures_dir + '/malwares.txt'

    @module.extend(Malwares)
  end

  describe '#malwares_file' do
    it "should return #{SPEC_FIXTURES_VANE_MODULES_DIR}/wp_malwares.txt" do
      Malwares.malwares_file(@malwares_file_path).should === @malwares_file_path
    end
  end

  describe '#malwares & #has_malwares' do
    after :each do
      if @fixture
        stub_request_to_fixture(url: @target_url, fixture: File.new(@fixture))
      end

      malwares = @module.malwares(@malwares_file_path)

      malwares.sort.should === @expected_malwares.sort
      @module.has_malwares?.should === (@expected_malwares.empty? ? false : true)
    end
    it 'should return an empty array on a 404' do
      stub_request(:get, @target_url).to_return(status: 404)

      @expected_malwares = []
    end

    it 'should return an array empty array if no infection found' do
      @fixture = @fixtures_dir + '/clean.html'
      @expected_malwares = []
    end

    it 'should return an array with 1 malware url (.rr.nu check)' do
      @fixture = @fixtures_dir + '/single-infection.html'
      @expected_malwares = ['http://irstde24clined.rr.nu/mm.php?d=1']
    end

    it 'should return an array with 1 malware url (iframe check)' do
      @fixture = @fixtures_dir + '/single-iframe-infection.html'
      @expected_malwares = ['http://www.thesea.org/media.php']
    end

    it 'should return an array with 3 malwares url' do
      @fixture = @fixtures_dir + '/multiple-infections.html'
      @expected_malwares = ['http://irstde24clined.rr.nu/mm.php?d=1', 'http://atio79srem.rr.nu/pmg.php?dr=1', 'http://www.thesea.org/media.php']
    end
  end

end
